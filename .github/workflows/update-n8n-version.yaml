name: Update n8n Version

on:
  schedule:
    # Run daily at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-version:
    name: Check and update n8n version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Update n8n version
        id: update
        run: |
          if ./scripts/update-n8n-version.sh; then
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "new_version=$(cat .version)" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.update.outputs.updated == 'true'
        run: |
          git add .version
          git commit -m "chore: update n8n version to ${{ steps.update.outputs.new_version }}"
          git push

      - name: Create Pull Request
        if: steps.update.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update n8n version to ${{ steps.update.outputs.new_version }}"
          title: "chore: update n8n version to ${{ steps.update.outputs.new_version }}"
          body: |
            This PR automatically updates the n8n version to the latest available version.
            
            **Changes:**
            - Updated `.version` file to `${{ steps.update.outputs.new_version }}`
            
            **Notes:**
            - This ensures the operator uses the latest stable n8n version by default
            - The version is read from `.version` file during build time
            - No code changes are required as the build process automatically picks up the new version
            
            Auto-generated by GitHub Actions.
          branch: update-n8n-version-${{ steps.update.outputs.new_version }}
          delete-branch: true